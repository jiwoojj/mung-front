{"ast":null,"code":"var _jsxFileName = \"/Users/jeniejung/new2-team/portfolio/src/components/selectBox/SelectBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ReactComponent as ArrowDown } from '../icons/arrow-down.svg';\nimport BasicInput from '../input/BasicInput';\nimport S from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectBox = ({\n  options = [],\n  placeholder = \"선택하세요\",\n  onSelect\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selected, setSelected] = useState('');\n  const handleSelect = val => {\n    setSelected(val);\n    setIsOpen(false);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(val);\n  };\n  return /*#__PURE__*/_jsxDEV(S.SelectWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(S.InputButtonWrapper, {\n      onClick: () => setIsOpen(prev => !prev),\n      children: [/*#__PURE__*/_jsxDEV(BasicInput, {\n        type: \"text\",\n        value: selected,\n        placeholder: placeholder,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(S.StyledArrow, {\n        $open: isOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(S.OptionList, {\n      children: options.map((opt, idx) => /*#__PURE__*/_jsxDEV(S.OptionItem, {\n        onClick: () => handleSelect(opt),\n        className: opt === selected ? 'selected' : '',\n        children: opt\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectBox, \"ZhvDpb0iHd9heEA4ZucVDc3VtYc=\");\n_c = SelectBox;\nexport default SelectBox;\nvar _c;\n$RefreshReg$(_c, \"SelectBox\");","map":{"version":3,"names":["React","useState","ReactComponent","ArrowDown","BasicInput","S","jsxDEV","_jsxDEV","SelectBox","options","placeholder","onSelect","_s","isOpen","setIsOpen","selected","setSelected","handleSelect","val","SelectWrapper","children","InputButtonWrapper","onClick","prev","type","value","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","StyledArrow","$open","OptionList","map","opt","idx","OptionItem","className","_c","$RefreshReg$"],"sources":["/Users/jeniejung/new2-team/portfolio/src/components/selectBox/SelectBox.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ReactComponent as ArrowDown } from '../icons/arrow-down.svg';\nimport BasicInput from '../input/BasicInput';\nimport S from './style';\n\n\nconst SelectBox = ({ options = [], placeholder = \"선택하세요\", onSelect }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [selected, setSelected] = useState('');\n\n    const handleSelect = (val) => {\n        setSelected(val);\n        setIsOpen(false);\n        onSelect?.(val);\n    };\n\n    return (\n        <S.SelectWrapper>\n            <S.InputButtonWrapper onClick={() => setIsOpen(prev => !prev)}>\n                <BasicInput\n                    type=\"text\"\n                    value={selected}\n                    placeholder={placeholder}\n                    readOnly\n                />\n                <S.StyledArrow $open={isOpen} />\n            </S.InputButtonWrapper>\n\n            {isOpen && (\n                <S.OptionList>\n                    {options.map((opt, idx) => (\n                        <S.OptionItem\n                            key={idx}\n                            onClick={() => handleSelect(opt)}\n                            className={opt === selected ? 'selected' : ''}\n                        >\n                            {opt}\n                        </S.OptionItem>\n                    ))}\n                </S.OptionList>\n            )}\n        </S.SelectWrapper>\n    );\n};\n\nexport default SelectBox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,IAAIC,SAAS,QAAQ,yBAAyB;AACrE,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,CAAC,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxB,MAAMC,SAAS,GAAGA,CAAC;EAAEC,OAAO,GAAG,EAAE;EAAEC,WAAW,GAAG,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,YAAY,GAAIC,GAAG,IAAK;IAC1BF,WAAW,CAACE,GAAG,CAAC;IAChBJ,SAAS,CAAC,KAAK,CAAC;IAChBH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGO,GAAG,CAAC;EACnB,CAAC;EAED,oBACIX,OAAA,CAACF,CAAC,CAACc,aAAa;IAAAC,QAAA,gBACZb,OAAA,CAACF,CAAC,CAACgB,kBAAkB;MAACC,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAACS,IAAI,IAAI,CAACA,IAAI,CAAE;MAAAH,QAAA,gBAC1Db,OAAA,CAACH,UAAU;QACPoB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEV,QAAS;QAChBL,WAAW,EAAEA,WAAY;QACzBgB,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFvB,OAAA,CAACF,CAAC,CAAC0B,WAAW;QAACC,KAAK,EAAEnB;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EAEtBjB,MAAM,iBACHN,OAAA,CAACF,CAAC,CAAC4B,UAAU;MAAAb,QAAA,EACRX,OAAO,CAACyB,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBAClB7B,OAAA,CAACF,CAAC,CAACgC,UAAU;QAETf,OAAO,EAAEA,CAAA,KAAML,YAAY,CAACkB,GAAG,CAAE;QACjCG,SAAS,EAAEH,GAAG,KAAKpB,QAAQ,GAAG,UAAU,GAAG,EAAG;QAAAK,QAAA,EAE7Ce;MAAG,GAJCC,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKE,CACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CACjB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE1B,CAAC;AAAClB,EAAA,CArCIJ,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}