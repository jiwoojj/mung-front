{"ast":null,"code":"var _jsxFileName = \"/Users/jeniejung/new2-team/portfolio/src/components/selectBox/SelectBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ReactComponent as ArrowDownIcon } from '../icons/arrow-down.svg';\nimport BasicInput from '../input/BasicInput';\nimport styled from 'styled-components';\nimport S from \"../../components/input/style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectBox = ({\n  options = [],\n  placeholder = \"선택하세요\",\n  onSelect\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selected, setSelected] = useState('');\n  const handleSelect = val => {\n    setSelected(val);\n    setIsOpen(false);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(val);\n  };\n  return /*#__PURE__*/_jsxDEV(SelectWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(S.InputButtonWrapper, {\n      onClick: () => setIsOpen(prev => !prev),\n      children: [/*#__PURE__*/_jsxDEV(BasicInput, {\n        type: \"text\",\n        value: selected,\n        placeholder: placeholder,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n        $open: isOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(OptionList, {\n      children: options.map((opt, idx) => /*#__PURE__*/_jsxDEV(OptionItem, {\n        onClick: () => handleSelect(opt),\n        className: opt === selected ? 'selected' : '',\n        children: opt\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(SelectBox, \"ZhvDpb0iHd9heEA4ZucVDc3VtYc=\");\n_c = SelectBox;\nexport default SelectBox;\nvar _c;\n$RefreshReg$(_c, \"SelectBox\");","map":{"version":3,"names":["React","useState","ReactComponent","ArrowDownIcon","BasicInput","styled","S","jsxDEV","_jsxDEV","SelectBox","options","placeholder","onSelect","_s","isOpen","setIsOpen","selected","setSelected","handleSelect","val","SelectWrapper","children","InputButtonWrapper","onClick","prev","type","value","readOnly","fileName","_jsxFileName","lineNumber","columnNumber","$open","OptionList","map","opt","idx","OptionItem","className","_c","$RefreshReg$"],"sources":["/Users/jeniejung/new2-team/portfolio/src/components/selectBox/SelectBox.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ReactComponent as ArrowDownIcon } from '../icons/arrow-down.svg';\nimport BasicInput from '../input/BasicInput';\nimport styled from 'styled-components';\nimport S from \"../../components/input/style\";\n\nconst SelectBox = ({ options = [], placeholder = \"선택하세요\", onSelect }) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [selected, setSelected] = useState('');\n\n    const handleSelect = (val) => {\n        setSelected(val);\n        setIsOpen(false);\n        onSelect?.(val);\n    };\n\n    return (\n        <SelectWrapper>\n\n            <S.InputButtonWrapper onClick={() => setIsOpen(prev => !prev)}>\n                <BasicInput\n                    type=\"text\"\n                    value={selected}\n                    placeholder={placeholder}\n                    readOnly\n                />\n                <ArrowDownIcon $open={isOpen} />\n            </S.InputButtonWrapper>\n\n            {isOpen && (\n                <OptionList>\n                    {options.map((opt, idx) => (\n                        <OptionItem key={idx} onClick={() => handleSelect(opt)} className={opt === selected ? 'selected' : ''}>\n                            {opt}\n                        </OptionItem>\n                    ))}\n                </OptionList>\n            )}\n        </SelectWrapper>\n    );\n};\n\nexport default SelectBox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,IAAIC,aAAa,QAAQ,yBAAyB;AACzE,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,CAAC,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,OAAO,GAAG,EAAE;EAAEC,WAAW,GAAG,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMiB,YAAY,GAAIC,GAAG,IAAK;IAC1BF,WAAW,CAACE,GAAG,CAAC;IAChBJ,SAAS,CAAC,KAAK,CAAC;IAChBH,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGO,GAAG,CAAC;EACnB,CAAC;EAED,oBACIX,OAAA,CAACY,aAAa;IAAAC,QAAA,gBAEVb,OAAA,CAACF,CAAC,CAACgB,kBAAkB;MAACC,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAACS,IAAI,IAAI,CAACA,IAAI,CAAE;MAAAH,QAAA,gBAC1Db,OAAA,CAACJ,UAAU;QACPqB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEV,QAAS;QAChBL,WAAW,EAAEA,WAAY;QACzBgB,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFvB,OAAA,CAACL,aAAa;QAAC6B,KAAK,EAAElB;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EAEtBjB,MAAM,iBACHN,OAAA,CAACyB,UAAU;MAAAZ,QAAA,EACNX,OAAO,CAACwB,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBAClB5B,OAAA,CAAC6B,UAAU;QAAWd,OAAO,EAAEA,CAAA,KAAML,YAAY,CAACiB,GAAG,CAAE;QAACG,SAAS,EAAEH,GAAG,KAAKnB,QAAQ,GAAG,UAAU,GAAG,EAAG;QAAAK,QAAA,EACjGc;MAAG,GADSC,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CACf;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAExB,CAAC;AAAClB,EAAA,CAlCIJ,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}